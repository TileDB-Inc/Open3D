name: Build Wheel [Ubuntu]

on:
  workflow_dispatch:
#  push:
#    branches:
#      - gsk/gh-build-wheel

jobs:
  build-wheel:
    name: Build wheel
    runs-on: Ubuntu-18.04
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Setup cache
        uses: actions/cache@v2
        with:
          # Ref: https://github.com/apache/incubator-mxnet/pull/18459/files
          path: ~/.ccache
          # We include the commit sha in the cache key, as new cache entries are
          # only created if there is no existing entry for the key yet.
          key: ${{ runner.os }}-ccache-${{ github.sha }}
          # Restore any ccache cache entry, if none for
          # ${{ runner.os }}-ccache-${{ github.sha }} exists.
          # Common prefix will be used so that ccache can be used across commits.
          restore-keys: |
            ${{ runner.os }}-ccache

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7

      # Pre-installed 18.04 packages: https://git.io/JfHmW
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y xorg-dev libglu1-mesa-dev python3-dev
          wget -q https://github.com/intel-isl/open3d_downloads/releases/download/ccache/ccache
          chmod +x ccache
          sudo mv ccache /usr/local/bin
          ccache -M 2G  # See .github/workflows/readme.md for ccache strategy.
          python -m pip install -r python/requirements.txt

      - name: Config and build package
        run: |
          PATH=/usr/lib/ccache:$PATH
          ccache -s

          mkdir -p build
          pushd build
          set -x # Echo commands on
          cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_GUI=OFF ..
          make VERBOSE=1 -j2 pip-package
          set +x # Echo commands off
          popd

          ccache -s
          PIP_PKG_NAME="$(basename build/lib/python_package/pip_package/open3d*.whl)"
          echo "PIP_PKG_NAME=$PIP_PKG_NAME" >> $GITHUB_ENV

      - name: Upload package
        uses: actions/upload-artifact@v2
        with:
          name: open3d_linux_x86_64_package
          path: build/lib/python_package/pip_package/${{ env.PIP_PKG_NAME }}
          if-no-files-found: error

  test-wheel:
    name: Test wheel
    runs-on: ubuntu-18.04
    needs: [build-wheel]
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2
        with:
          submodules: false

      - name: Download package
        uses: actions/download-artifact@v2
        with:
          name: open3d_linux_x86_64_package

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - name: Test Python package
        run: |
          pip install open3d*.whl pytest
          python -c "import open3d; print('Installed:', open3d)"
          python -c "import open3d; print('CUDA enabled: ', open3d.core.cuda.is_available())"
          pytest python/test --ignore python/test/ml_ops --verbose
